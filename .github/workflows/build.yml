name: hello-world

on:
  [workflow_dispatch]

env:
  REGISTRY: clockbox

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest # specify the build machine
    steps:
      
      - name: Checkout  # checkout to the repository on the build machine
        uses: actions/checkout@v4
      
      - name: Login to Docker Hub # login to Docker Hub using the secrets provided
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Get current date # get the date of the build
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d--%M-%S')"

      # - name: Download twistcli from the Prisma Cloud Compute Console
      #   run: |
      #     curl --user ${{ secrets.PCC_USER }}:${{ secrets.PCC_PASS }} --output ./twistcli ${{ secrets.PCC_CONSOLE_URL }}/api/v1/util/twistcli 
      #     chmod a+x ./twistcli

      - name: Check with Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        env: 
          PRISMA_API_URL: https://api0.prismacloud.io
        with:
          quiet: true             # Display only failed checked
          # framework: dockerfile   # scanning only for Docker
          # soft_fail: true         # Do not failed the pipeline
          # external_checks_repos: https://github.com/git-jfontanel/checkov-custom-policies.git//Docker   # Repo with my custom Docker policies
          api-key: ${{ secrets.BC_API_KEY }}
          use_enforcement_rules: true

      - name: Build and tag docker image
        env:
          IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REGISTRY }}:${{ steps.date.outputs.date }}
        run: docker build -t $IMAGE_NAME .

      - name: Scan the image
        id: scan
        # uses: PaloAltoNetworks/prisma-cloud-scan@v1.5
        env:
          IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REGISTRY }}:${{ steps.date.outputs.date }}
        # with:
        #   pcc_console_url: ${{ secrets.PCC_CONSOLE_URL }}
        #   pcc_user: ${{ secrets.PCC_USER }}
        #   pcc_pass: ${{ secrets.PCC_PASS }}
        #   image_name: ${{ env.IMAGE_NAME }}
        run: |
          echo Downloading Twistcli
          curl --user ${{ secrets.PCC_USER }}:${{ secrets.PCC_PASS }} --output ./twistcli ${{ secrets.PCC_CONSOLE_URL }}/api/v1/util/twistcli 
          chmod a+x ./twistcli
          echo scanning...
          ./twistcli images scan --address ${{ secrets.PCC_CONSOLE_URL }} --user ${{ secrets.PCC_USER }} --password ${{ secrets.PCC_PASS }} --output-file pcc_scan_results.json --details $IMAGE_NAME
          
      - name: Push docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REGISTRY }}:${{ steps.date.outputs.date }}
        
